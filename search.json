[{"title":"uniApp小程序文件下载与分享","url":"/2025/05/19/%E5%91%8A%E5%88%ABH5%E5%B5%8C%E5%85%A5%EF%BC%81uniApp%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD%E4%B8%8E%E5%88%86%E4%BA%AB%E5%AE%8C%E6%95%B4%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/","content":"背景小程序作为轻量化应用载体，在文件处理能力上存在一定局限性。传统的 PDF、CSV 文件下载普遍采用 H5 页面嵌入实现，导致用户体验割裂、开发流程复杂、维护成本高。本文将介绍如何利用 uniapp 和微信小程序原生 API，打造流畅高效的文件下载与预览功能，显著提升用户体验。\n\nuniapp 小程序文件下载代码详解：一步步理解实现原理1. 跨平台文件下载设计代码采用了 uniApp 提供的条件编译功能，通过 #ifdef 和 #endif 指令实现了在不同平台（APP、H5、小程序）下的差异化处理，确保代码在各端均可正常运行。核心思路是：\n\n先通过 uni.downloadFile() 将文件下载到本地临时路径\n根据当前运行环境，选择合适的方式处理文件\n\n2. 小程序文件处理流程在小程序环境中，代码主要完成了以下工作：\n\n文件预览：调用 uni.openDocument() API 打开系统级预览界面，支持 PDF、DOCX、XLSX 等多种格式\n分享功能：通过 wx.shareFileMessage() 实现文件的社交分享，提升交互体验\n进度反馈：使用 downloadTask.onProgressUpdate() 实时显示下载进度，增强用户体验\n\n3. 性能优化与错误处理代码中包含了完整的错误处理机制：\n\n网络请求失败反馈\n文件打开异常处理\n分享操作结果提示\n\n每个环节都配有相应的 Toast 提示，确保用户获得清晰的操作反馈。\n4. 跨端适配要点\nAPP 端：文件保存至本地文件系统\nH5 端：通过创建虚拟链接实现下载\n小程序端：利用系统文档预览能力和平台特有的分享 API\n\n源码const doDownload = () =&gt; &#123;  // 显示下载中的提示  uni.showLoading(&#123;    title: &#x27;文件下载中...&#x27;,  &#125;);  const downloadTask = uni.downloadFile(&#123;    /* 预览pdf */    // url: &#x27;[文件地址]‘,    /* 下载csv */    // url: &#x27;[文件地址]&#x27;,    /* 下载pdf */    url: &#x27;[文件地址]&#x27;,    success: (res) =&gt; &#123;      console.log(&#x27;下载完成&#x27;, res);      if (res.statusCode === 200) &#123;        const tempFilePath = res.tempFilePath;        // 根据平台执行不同的操作        // #ifdef APP-PLUS        // APP环境下，保存到相册或文件管理器        uni.saveFile(&#123;          tempFilePath: tempFilePath,          success: (saveRes) =&gt; &#123;            uni.hideLoading();            uni.showToast(&#123;              title: &#x27;文件已保存: &#x27; + saveRes.savedFilePath,              icon: &#x27;success&#x27;,              duration: 3000,            &#125;);          &#125;,          fail: (err) =&gt; &#123;            console.error(&#x27;保存文件失败&#x27;, err);            uni.hideLoading();            uni.showToast(&#123; title: &#x27;保存文件失败&#x27;, icon: &#x27;none&#x27; &#125;);          &#125;,        &#125;);        // #endif        // #ifdef H5        // H5环境下，创建下载链接        const a = document.createElement(&#x27;a&#x27;);        a.href = tempFilePath;        a.download = &#x27;下载文件.csv&#x27;;        document.body.appendChild(a);        a.click();        document.body.removeChild(a);        uni.hideLoading();        uni.showToast(&#123; title: &#x27;下载完成&#x27;, icon: &#x27;success&#x27; &#125;);        // #endif        // #ifdef MP-WEIXIN || MP-ALIPAY || MP-BAIDU || MP-TOUTIAO || MP-QQ || MP-KUAISHOU        // 小程序环境，提供预览功能        uni.openDocument(&#123;          filePath: tempFilePath,          fileType: &#x27;csv&#x27;,          success: () =&gt; &#123;            uni.hideLoading();            uni.showActionSheet(&#123;              itemList: [&#x27;转发给微信好友&#x27;],              success: function (res) &#123;                if (res.tapIndex === 0) &#123;                  // 使用微信小程序的分享文件消息接口                  wx.shareFileMessage(&#123;                    filePath: tempFilePath,                    success() &#123;                      console.log(&#x27;分享文件消息成功&#x27;);                    &#125;,                    fail(res) &#123;                      console.error(&#x27;分享文件消息失败&#x27;, res);                      uni.showToast(&#123;                        title: &#x27;分享失败&#x27;,                        icon: &#x27;none&#x27;,                      &#125;);                    &#125;,                  &#125;);                &#125;              &#125;,            &#125;);            // uni.showToast(&#123; title: &#x27;文件已打开&#x27;, icon: &#x27;success&#x27; &#125;);          &#125;,          fail: (err) =&gt; &#123;            console.error(&#x27;打开文件失败&#x27;, err);            uni.hideLoading();            uni.showToast(&#123; title: &#x27;打开文件失败&#x27;, icon: &#x27;none&#x27; &#125;);          &#125;,        &#125;);        // #endif      &#125; else &#123;        uni.hideLoading();        uni.showToast(&#123; title: &#x27;下载失败: &#x27; + res.statusCode, icon: &#x27;none&#x27; &#125;);      &#125;    &#125;,    fail: (err) =&gt; &#123;      console.error(&#x27;下载失败&#x27;, err);      uni.hideLoading();      uni.showToast(&#123; title: &#x27;下载失败，请检查网络&#x27;, icon: &#x27;none&#x27; &#125;);    &#125;,  &#125;);  // 添加下载进度监听  downloadTask.onProgressUpdate((res) =&gt; &#123;    console.log(&#x27;下载进度&#x27;, res.progress);    // 可以用进度条展示下载进度    uni.showLoading(&#123;      title: &#x27;下载中: &#x27; + res.progress + &#x27;%&#x27;,    &#125;);  &#125;);&#125;;\n\n展示调用手机系统的预览\n微信转发给好友\n","categories":["优化与重构"],"tags":["uniapp"]},{"title":"Hello World","url":"/2024/04/12/hello-world/","content":"Hello WorldWelcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new post$ hexo new &quot;My New Post&quot;\n\nMore info: Writing\nRun server$ hexo server\n\nMore info: Server\nGenerate static files$ hexo generate\n\nMore info: Generating\nDeploy to remote sites$ hexo deploy\n\nMore info: Deployment\n","tags":["init"]},{"title":"如何让Github成为你的免费图床","url":"/2025/05/19/%E5%A6%82%E4%BD%95%E8%AE%A9Github%E6%88%90%E4%B8%BA%E4%BD%A0%E7%9A%84%E5%85%8D%E8%B4%B9%E5%9B%BE%E5%BA%8A/","content":"怎么做PicGo + Github\n实现过程下载 picGohttps://github.com/Molunerfinn/PicGo/releases提示文件已经损坏，则在终端输入xattr -cr &#39;应用目录&#39;回车再重新打开应用在这里插入图片描述\n创建 Github 仓库\n生成一个 token 用于 PicGo 操作你的仓库：\n访问：https://github.com/settings/tokens点击“Gererate new token”生成一个 token\n选择指定仓库因为 github 这里做了更新，为了方便，勾上了所有权限\n注意： 这个 token 生成后只会显示一次！你要把这个 token 复制一下存到其他地方以备以后要用形如下方的秘钥 tokengithub*pat_11AVIOJM***[TEST]_**3cYe8D5a_KY1gABbprHvbYzfg4cYB2C70vdCbPYUYxTS5Blfktr6PJRTXINCt8xvrHxD\n配置 PicGo填入对应的 github 仓库名，分支名和生成的 token\n成功上传图片，进度条为蓝色则没问题，否则点击 PicGo 设置查看日志\n","tags":["Github"]}]